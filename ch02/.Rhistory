# 1. 그래프
library(ggplot2)
cars
plot(cars$speed, cars$dist, main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
plot(jitter(cars$speed), jitter(cars$dist),
main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
par(mfrow=c(1,2))
plot(cars$speed, cars$dist, main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
plot(jitter(cars$speed), jitter(cars$dist),
main="속도와 제동거리",
xlab="속도(mph)", ylab="제동거리(ft)", pch=1, col="red")
par(mfrow=c(1,1))
Nile
plot(Nile, main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량")
plot(Nile, type='p' main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량")
plot(Nile, type='p', main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량")
plot(Nile, main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량")
plot(Nile, type='p', main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량")
plot(Nile, main="Nile강의 연도별 유량 변화",
xlab="연도", ylab="유량")
plot.ts(Nile)
plot(Nile)
df_nile <- as.data.frame(Nile)
head(df_nile)
year <- c(1871:1970)
df_nile$year <- year
head(df_nile)
ggplot(df_nile, aes(x=year, y=x)) +
geom_line()
df_Nile <- data.frame(date=time(Nile),
y = as.matrix(Nile))
head(df_Nile)
df_Nile <- data.frame(year=time(Nile),
flood = as.matrix(Nile))
head(df_Nile)
ggplot(df_Nile, aes(x=year, y=flood)) +
geom_line()
# 2장
setwd('D:/Workspace/R_Statistics/ch02')
# 사전준비
data <- read.csv("2010년 인구사항.csv", header=F, na.strings=c("."))
str(data)
data$V1 <- factor(data$V1, levels=c(1, 2), labels=c("남자", "여자"))
data$V3 <- factor(data$V3, levels=1:14,
labels=c("가구주",  "가구주의 배우자", "자녀",
"자녀의 배우자",  "가구주의 부모",  "배우자의 부모",
"손자녀, 그 배우자", "증손자녀, 그 배우자",
"조부모", "형제자매, 그 배우자",
"형제자매의 자녀,그 배우자","부모의 형제자매, 그 배우자",
"기타 친인척", "그외같이사는사람") )
data$V4 <- factor(data$V4, levels=1:8,
labels=c("안 받았음", "초등학교", "중학교",
"고등학교", "대학-4년제 미만", "대학-4년제 이상",
"석사과정", "박사과정") )
head(data)
head(data); tail(data)
tableV5 <- table(data$V5)
tableV5
barplot(tableV5, main="출생아(남자)별 빈도",
xlab="출생아수", ylab="빈도")
# 히스토그램
hist(data$V2,  main="연령별 분포", xlab="연령", ylab="빈도")
hist(data$V2, breaks=c(seq(0, 90, 10)), right=F,
main="연령별 분포", xlab="연령", ylab="빈도")
hist(data$V2, probability=T,
main="연령별 분포", xlab="연령", ylab="밀도")
# 히스토그램
hist(data$V2, main="연령별 분포", xlab="연령", ylab="빈도")
hist(data$V2, probability=T,
main="연령별 분포", xlab="연령", ylab="밀도")
par(mfrow=c(1,2))
hist(data$V2, breaks=c(seq(0, 90, 10)), right=F,
main="연령별 분포", xlab="연령", ylab="빈도")
hist(data$V2, probability=T, breaks=c(seq(0, 90, 10)), right=F,
main="연령별 분포", xlab="연령", ylab="밀도")
par(mfrow=c(1,1))
# 원 그래프
pie(table(data$V4), main="학력수준별 비중", cex=0.8)
table(data$V4)
pie(table(data$V4), main="학력수준별 비중", cex=0.5)
pie(table(data$V4), main="학력수준별 비중", cex=0.8)
# 2. 모수와 통계량
# 라니 카페
ranicafe <- read.csv('cafedata.csv')
str(ranicafe)
head(ranicafe)
summary(ranicafe)
dim(ranicafe)
sort(ranicafe$Coffees)
# 2. 모수와 통계량
# 라니 카페
ranicafe <- read.csv('cafedata.csv', stringsAsFactors = F)
str(ranicafe)
ranicafe$Coffees <- as.numeric(ranicafe$Coffees)
sort(ranicafe$Coffees)
sort(ranicafe$Coffees)[1]
sort(ranicafe$Coffees, decreasing = T)
sort(ranicafe$Coffees, decreasing = T)[1]
min(ranicafe$Coffees)
min(ranicafe$Coffees)
max(ranicafe$Coffees)
ranicafe$Coffees
min(ranicafe$Coffees, na.rm = T)
max(ranicafe$Coffees, na.rm = T)
stem(ranicafe$Coffees)
hist(ranicafe$Coffees)
rc <- ranicafe$Coffees
weight <- 1 / length(rc)
sum(rc * weight)
sum(rc * weight, na.rm = T)
mean(rc, na.rm = T)
weight
weight <- 1 / (length(rc) - 1)
sum(rc * weight, na.rm = T)
mean(rc, na.rm = T)
rc[rc == max(rc)] <- 480
mean(rc, na.rm = T)
rc[rc == max(rc)] <- 480
mean(rc, na.rm = T)
rc[rc == max(rc, na.rm = T)] <- 480
mean(rc, na.rm = T)
sort(ranicafe$Coffees)
length(rc)
)
median.idx <- (1 + length(rc)-1)) / 2)
median.idx <- (1 + length(rc)-1) / 2
sort(rc)[median.idx]
rc <- ranicafe$Coffees
length(rc)
median.idx <- (1 + length(rc)-1) / 2
sort(rc)[median.idx]
rc[rc == max(rc, na.rm = T)] <- 480
median.idx <- (1 + length(rc)-1) / 2
sort(rc)[median.idx]
median(rc, na.rm = T)
# 표준편차 구하기
height <- c(164, 166, 168, 170, 172, 174, 176)
height.m <- mean(height)
height.m
h.dev <- height - height.m
h.dev
sum(h.dev)
h.dev2 <- h.dev ** 2
sum(h.dev2)
variance <- sum(h.dev2) / length(height)
variance
standard_deviation <- sqrt(variance)
standard_deviation
mean(height)
var(height)
sd(height)
# 사분위수 구하기
quantile(rc, na.rm = T)
qs <- quantile(rc, na.rm = T)
qs
qs[4] - qs[2]
IQR(rc, na.rm = T)
bp <- boxplot(rc, main="커피 판매량에 대한 상자도표", axes=F)
rc <- ranicafe$Coffees
bp <- boxplot(rc, main="커피 판매량에 대한 상자도표", axes=F)
# 이상치(Outlier)
boxplot(cars)
# 이상치(Outlier)
boxplot(cars$dist)
qs <- quantile(cars$dist)
qs
iqr <- qs[4] - qs[2]
iqr
upperLimit <- qs[4] + 1.5 * iqr
lowerLimit <- qs[2] - 1.5 * iqr
lowerLimit; upperLimit
cars$dist[cars$dist > upperLimit]
cars$dist[cars$dist < lowerLimit]
table(ranicafe$Coffees)
install.packages('tosscoin')
install.packages('prob')
library(prob)
tosscoin(1)
rolldie(1)
urnsamples(1:3, size=2)
tosscoin(2)
rolldie(2)
urnsamples(1:3, size=2, replace=T)
urnsamples(c( rep("R", 3), rep("B", 2)), size=2)
tosscoin(2, makespace=T)
